# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR The FreeBSD Project
# This file is distributed under the same license as the FreeBSD Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FreeBSD Documentation VERSION\n"
"POT-Creation-Date: 2021-01-30 15:34-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:1
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:4
msgid "title: Chapter 5. Source Tree Guidelines and Policies authors:"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:5
msgid "author: Poul-Henning Kamp"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:8
#, no-wrap
msgid ""
"author: Giorgos Keramidas\n"
"prev: books/developers-handbook/l10n\n"
"next: books/developers-handbook/testing\n"
"---\n"
msgstr ""

#. type: Title =
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:11
#, no-wrap
msgid "Source Tree Guidelines and Policies"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:34
msgid "toc::[]"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:36
msgid ""
"This chapter documents various guidelines and policies in force for the "
"FreeBSD source tree."
msgstr ""

#. type: Title ==
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:38
#, no-wrap
msgid "Style Guidelines"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:41
msgid ""
"Consistent coding style is extremely important, particularly with large "
"projects like FreeBSD. Code should follow the FreeBSD coding styles "
"described in man:style[9] and man:style.Makefile[5]."
msgstr ""

#. type: Title ==
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:43
#, no-wrap
msgid "`MAINTAINER` on Makefiles"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:46
msgid ""
"If a particular portion of the FreeBSD [.filename]#src/# distribution is "
"being maintained by a person or group of persons, this is communicated "
"through an entry in [.filename]#src/MAINTAINERS#. Maintainers of ports "
"within the Ports Collection express their maintainership to the world by "
"adding a `MAINTAINER` line to the [.filename]#Makefile# of the port in "
"question:"
msgstr ""

#. type: delimited block .
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:50
#, no-wrap
msgid "MAINTAINER= email-addresses\n"
msgstr ""

#. type: delimited block =
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:56
msgid ""
"For other parts of the repository, or for sections not listed as having a "
"maintainer, or when you are unsure who the active maintainer is, try looking "
"at the recent commit history of the relevant parts of the source tree. It is "
"quite often the case that a maintainer is not explicitly named, but the "
"people who are actively working in a part of the source tree for, say, the "
"last couple of years are interested in reviewing changes. Even if this is "
"not specifically mentioned in the documentation or the source itself, asking "
"for a review as a form of courtesy is a very reasonable thing to do."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:59
msgid "The role of the maintainer is as follows:"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:61
msgid ""
"The maintainer owns and is responsible for that code. This means that he or "
"she is responsible for fixing bugs and answering problem reports pertaining "
"to that piece of the code, and in the case of contributed software, for "
"tracking new versions, as appropriate."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:62
msgid ""
"Changes to directories which have a maintainer defined shall be sent to the "
"maintainer for review before being committed. Only if the maintainer does "
"not respond for an unacceptable period of time, to several emails, will it "
"be acceptable to commit changes without review by the maintainer. However, "
"it is suggested that you try to have the changes reviewed by someone else if "
"at all possible."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:63
msgid ""
"It is of course not acceptable to add a person or group as maintainer unless "
"they agree to assume this duty. On the other hand it does not have to be a "
"committer and it can easily be a group of people."
msgstr ""

#. type: Title ==
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:65
#, no-wrap
msgid "Contributed Software"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:68
msgid ""
"Some parts of the FreeBSD distribution consist of software that is actively "
"being maintained outside the FreeBSD project. For historical reasons, we "
"call this _contributed_ software. Some examples are sendmail, gcc and patch."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:70
msgid ""
"Over the last couple of years, various methods have been used in dealing "
"with this type of software and all have some number of advantages and "
"drawbacks. No clear winner has emerged."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:72
msgid ""
"Since this is the case, after some debate one of these methods has been "
"selected as the \"official\" method and will be required for future imports "
"of software of this kind. Furthermore, it is strongly suggested that "
"existing contributed software converge on this model over time, as it has "
"significant advantages over the old method, including the ability to easily "
"obtain diffs relative to the \"official\" versions of the source by everyone "
"(even without direct repository access). This will make it significantly "
"easier to return changes to the primary developers of the contributed "
"software."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:74
msgid ""
"Ultimately, however, it comes down to the people actually doing the work. If "
"using this model is particularly unsuited to the package being dealt with, "
"exceptions to these rules may be granted only with the approval of the core "
"team and with the general consensus of the other developers. The ability to "
"maintain the package in the future will be a key issue in the decisions."
msgstr ""

#. type: delimited block =
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:78
msgid ""
"Because it makes it harder to import future versions minor, trivial and/or "
"cosmetic changes are _strongly discouraged_ on files that are still tracking "
"the vendor branch."
msgstr ""

#. type: Title ===
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:81
#, no-wrap
msgid "Vendor Imports with SVN"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:84
msgid ""
"This section describes the vendor import procedure with Subversion in "
"details."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:87
#, no-wrap
msgid "*Preparing the Tree*\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:89
#, no-wrap
msgid ""
"\n"
"If this is your first import after the switch to SVN, you will have to "
"flatten and clean up the vendor tree, and bootstrap merge history in the "
"main tree. If not, you can safely omit this step.\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:91
#, no-wrap
msgid ""
"\n"
"During the conversion from CVS to SVN, vendor branches were imported with "
"the same layout as the main tree. For example, the foo vendor sources ended "
"up in [.filename]#vendor/foo/dist/contrib/foo#, but it is pointless and "
"rather inconvenient. What we really want is to have the vendor source "
"directly in [.filename]#vendor/foo/dist#, like this:\n"
msgstr ""

#. type: delimited block .
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:100
#, no-wrap
msgid ""
"% cd vendor/foo/dist/contrib/foo\n"
"% svn move $(svn list) ../..\n"
"% cd ../..\n"
"% svn remove contrib\n"
"% svn propdel -R svn:mergeinfo\n"
"% svn commit\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:103
msgid ""
"  Note that, the `propdel` bit is necessary because starting with 1.5, "
"Subversion will automatically add `svn:mergeinfo` to any directory you copy "
"or move. In this case, you will not need this information, since you are not "
"going to merge anything from the tree you deleted."
msgstr ""

#. type: delimited block =
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:107
msgid ""
"You may want to flatten the tags as well. The procedure is exactly the "
"same. If you do this, put off the commit until the end."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:110
msgid ""
"  Check the [.filename]#dist# tree and perform any cleanup that is deemed to "
"be necessary. You may want to disable keyword expansion, as it makes no "
"sense on unmodified vendor code. In some cases, it can be even be harmful."
msgstr ""

#. type: delimited block .
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:115
#, no-wrap
msgid ""
"% svn propdel svn:keywords -R .\n"
"% svn commit\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:118
msgid ""
"  Bootstrapping of `svn:mergeinfo` on the target directory (in the main "
"tree) to the revision that corresponds to the last change was made to the "
"vendor tree prior to importing new sources is also needed:"
msgstr ""

#. type: delimited block .
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:124
#, no-wrap
msgid ""
"% cd head/contrib/foo\n"
"% svn merge --record-only ^/vendor/foo/dist@12345678 .\n"
"% svn commit\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:127
msgid ""
"  With some shells, the `^` in the above command may need to be escaped with "
"a backslash."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:128
#, no-wrap
msgid "*Importing New Sources*\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:130
#, no-wrap
msgid ""
"\n"
"Prepare a full, clean tree of the vendor sources. With SVN, we can keep a "
"full distribution in the vendor tree without bloating the main tree. Import "
"everything but merge only what is needed.\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:132
#, no-wrap
msgid ""
"\n"
"Note that you will need to add any files that were added since the last "
"vendor import, and remove any that were removed. To facilitate this, you "
"should prepare sorted lists of the contents of the vendor tree and of the "
"sources you are about to import:\n"
msgstr ""

#. type: delimited block .
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:139
#, no-wrap
msgid ""
"% cd vendor/foo/dist\n"
"% svn list -R | grep -v '/$' | sort > ../old\n"
"% cd ../foo-9.9\n"
"% find . -type f | cut -c 3- | sort > ../new\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:142
msgid ""
"  With these two files, the following command will list removed files (files "
"only in [.filename]#old#):"
msgstr ""

#. type: delimited block .
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:146
#, no-wrap
msgid "% comm -23 ../old ../new\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:149
msgid ""
"  While the command below will list added files (files only in "
"[.filename]#new#):"
msgstr ""

#. type: delimited block .
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:153
#, no-wrap
msgid "% comm -13 ../old ../new\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:156
msgid "  Let us put this together:"
msgstr ""

#. type: delimited block .
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:164
#, no-wrap
msgid ""
"% cd vendor/foo/foo-9.9\n"
"% tar cf - . | tar xf - -C ../dist\n"
"% cd ../dist\n"
"% comm -23 ../old ../new | xargs svn remove\n"
"% comm -13 ../old ../new | xargs svn add\n"
msgstr ""

#. type: delimited block =
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:170
msgid ""
"If there are new directories in the new distribution, the last command will "
"fail. You will have to add the directories, and run it again. Conversely, if "
"any directories were removed, you will have to remove them manually."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:173
msgid "  Check properties on any new files:"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:178
#, no-wrap
msgid ""
"** All text files should have `svn:eol-style` set to `native`.\n"
"** All binary files should have `svn:mime-type` set to "
"`application/octet-stream`, unless there is a more appropriate media type.\n"
"** Executable files should have `svn:executable` set to `*`.\n"
"** There should be no other properties on any file in the tree.\n"
msgstr ""

#. type: delimited block =
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:182
msgid ""
"You are ready to commit, but you should first check the output of `svn stat` "
"and `svn diff` to make sure everything is in order."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:185
msgid ""
"  Once you have committed the new vendor release, you should tag it for "
"future reference. The best and quickest way is to do it directly in the "
"repository:"
msgstr ""

#. type: delimited block .
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:189
#, no-wrap
msgid "% svn copy ^/vendor/foo/dist svn_base/vendor/foo/9.9\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:192
msgid ""
"  To get the new tag, you can update your working copy of "
"[.filename]#vendor/foo#."
msgstr ""

#. type: delimited block =
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:196
msgid ""
"If you choose to do the copy in the checkout instead, do not forget to "
"remove the generated `svn:mergeinfo` as described above."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:199
#, no-wrap
msgid "*Merging to __-HEAD__*\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:201
#, no-wrap
msgid ""
"\n"
"After you have prepared your import, it is time to merge. Option "
"`--accept=postpone` tells SVN not to handle merge conflicts yet, because "
"they will be taken care of manually:\n"
msgstr ""

#. type: delimited block .
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:207
#, no-wrap
msgid ""
"% cd head/contrib/foo\n"
"% svn update\n"
"% svn merge --accept=postpone ^/vendor/foo/dist\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:210
msgid ""
"  Resolve any conflicts, and make sure that any files that were added or "
"removed in the vendor tree have been properly added or removed in the main "
"tree. It is always a good idea to check differences against the vendor "
"branch:"
msgstr ""

#. type: delimited block .
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:214
#, no-wrap
msgid "% svn diff --no-diff-deleted --old=^/vendor/foo/dist --new=.\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:217
msgid ""
"  `--no-diff-deleted` tells SVN not to check files that are in the vendor "
"tree but not in the main tree."
msgstr ""

#. type: delimited block =
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:221
msgid ""
"With SVN, there is no concept of on or off the vendor branch. If a file that "
"previously had local modifications no longer does, just remove any left-over "
"cruft, such as FreeBSD version tags, so it no longer shows up in diffs "
"against the vendor tree."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:224
msgid ""
"  If any changes are required for the world to build with the new sources, "
"make them now - and test until you are satisfied that everything build and "
"runs correctly."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:225
#, no-wrap
msgid "*Commit*\n"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:227
#, no-wrap
msgid ""
"\n"
"Now, you are ready to commit. Make sure you get everything in one "
"go. Ideally, you would have done all steps in a clean tree, in which case "
"you can just commit from the top of that tree. That is the best way to avoid "
"surprises. If you do it properly, the tree will move atomically from a "
"consistent state with the old code to a consistent state with the new "
"code.\n"
msgstr ""

#. type: Title ==
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:229
#, no-wrap
msgid "Encumbered Files"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:232
msgid ""
"It might occasionally be necessary to include an encumbered file in the "
"FreeBSD source tree. For example, if a device requires a small piece of "
"binary code to be loaded to it before the device will operate, and we do not "
"have the source to that code, then the binary file is said to be "
"encumbered. The following policies apply to including encumbered files in "
"the FreeBSD source tree."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:234
msgid ""
"Any file which is interpreted or executed by the system CPU(s) and not in "
"source format is encumbered."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:235
msgid "Any file with a license more restrictive than BSD or GNU is encumbered."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:236
msgid ""
"A file which contains downloadable binary data for use by the hardware is "
"not encumbered, unless (1) or (2) apply to it. It must be stored in an "
"architecture neutral ASCII format (file2c or uuencoding is recommended)."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:237
msgid ""
"Any encumbered file requires specific approval from the "
"link:https://www.FreeBSD.org/administration/#t-core[Core Team] before it is "
"added to the repository."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:238
msgid ""
"Encumbered files go in [.filename]#src/contrib# or "
"[.filename]#src/sys/contrib#."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:239
msgid ""
"The entire module should be kept together. There is no point in splitting "
"it, unless there is code-sharing with non-encumbered code."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:240
msgid "Object files are named [.filename]#arch/filename.o.uu>#."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:241
msgid "Kernel files:"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:242
msgid ""
"Should always be referenced in [.filename]#conf/files.*# (for build "
"simplicity)."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:243
msgid ""
"Should always be in [.filename]#LINT#, but the "
"link:https://www.FreeBSD.org/administration/#t-core[Core Team] decides per "
"case if it should be commented out or not. The "
"link:https://www.FreeBSD.org/administration/#t-core[Core Team] can, of "
"course, change their minds later on."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:244
msgid "The _Release Engineer_ decides whether or not it goes into the release."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:246
msgid "User-land files:"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:247
msgid ""
"The link:https://www.FreeBSD.org/administration/#t-core[Core team] decides "
"if the code should be part of `make world`."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:248
msgid ""
"The link:https://www.FreeBSD.org/administration/#t-re[Release Engineering] "
"decides if it goes into the release."
msgstr ""

#. type: Title ==
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:250
#, no-wrap
msgid "Shared Libraries"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:253
msgid ""
"If you are adding shared library support to a port or other piece of "
"software that does not have one, the version numbers should follow these "
"rules. Generally, the resulting numbers will have nothing to do with the "
"release version of the software."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:255
msgid "The three principles of shared library building are:"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:257
msgid "Start from `1.0`"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:258
msgid ""
"If there is a change that is backwards compatible, bump minor number (note "
"that ELF systems ignore the minor number)"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:259
msgid "If there is an incompatible change, bump major number"
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:261
msgid ""
"For instance, added functions and bugfixes result in the minor version "
"number being bumped, while deleted functions, changed function call syntax, "
"etc. will force the major version number to change."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:263
msgid ""
"Stick to version numbers of the form major.minor (`_x_._y_`). Our a.out "
"dynamic linker does not handle version numbers of the form `_x_._y_._z_` "
"well. Any version number after the `_y_` (i.e., the third digit) is totally "
"ignored when comparing shared lib version numbers to decide which library to "
"link with. Given two shared libraries that differ only in the \"micro\" "
"revision, `ld.so` will link with the higher one. That is, if you link with "
"[.filename]#libfoo.so.3.3.3#, the linker only records `3.3` in the headers, "
"and will link with anything starting with `_libfoo.so.3_._(anything >= "
"3)_._(highest available)_`."
msgstr ""

#. type: delimited block =
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:267
msgid ""
"`ld.so` will always use the highest \"minor\" revision. For instance, it "
"will use [.filename]#libc.so.2.2# in preference to [.filename]#libc.so.2.0#, "
"even if the program was initially linked with [.filename]#libc.so.2.0#."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:270
msgid ""
"In addition, our ELF dynamic linker does not handle minor version numbers at "
"all. However, one should still specify a major and minor version number as "
"our [.filename]#Makefile#'s \"do the right thing\" based on the type of "
"system."
msgstr ""

#. type: Plain text
#: documentation/content/en/books/developers-handbook/policies/chapter.adoc:271
msgid ""
"For non-port libraries, it is also our policy to change the shared library "
"version number only once between releases. In addition, it is our policy to "
"change the major shared library version number only once between major OS "
"releases (i.e., from 6.0 to 7.0). When you make a change to a system library "
"that requires the version number to be bumped, check the "
"[.filename]#Makefile#'s commit logs. It is the responsibility of the "
"committer to ensure that the first such change since the release will result "
"in the shared library version number in the [.filename]#Makefile# to be "
"updated, and any subsequent changes will not."
msgstr ""
